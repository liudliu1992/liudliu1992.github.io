<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Docker 安装nacos</title>
    <url>/2021/08/08/Docker-%E5%AE%89%E8%A3%85nacos/</url>
    <content><![CDATA[<p>使用Docker 搭建nacos mysql模式服务</p>
<span id="more"></span>

<h3 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h3><ol>
<li>拉取最新镜像镜像</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull nacos/nacos-server</span><br></pre></td></tr></table></figure>

<ol>
<li>挂载目录</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /mydata/nacos/logs/                      <span class="comment">#新建logs目录</span></span><br></pre></td></tr></table></figure>

<ol>
<li><p>mysql新建nacos的数据库，并执行脚本<br>下载地址：<a href="https://links.jianshu.com/go?to=https://github.com/alibaba/nacos/blob/master/config/src/main/resources/META-INF/nacos-db.sql">https://github.com/alibaba/nacos/blob/master/config/src/main/resources/META-INF/nacos-db.sql</a></p>
</li>
<li><p>启动容器</p>
</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"> docker  run \</span><br><span class="line">--name nacos -d \</span><br><span class="line">-p <span class="number">8848</span>:<span class="number">8848</span> \</span><br><span class="line">--privileged=<span class="literal">true</span> \</span><br><span class="line">--restart=always \</span><br><span class="line">-e JVM_XMS=256m \</span><br><span class="line">-e JVM_XMX=256m \</span><br><span class="line">-e MODE=standalone \</span><br><span class="line">-e SPRING_DATASOURCE_PLATFORM=mysql \</span><br><span class="line">-e MYSQL_SERVICE_HOST=  \  #mysql地址</span><br><span class="line">-e MYSQL_SERVICE_DB_NAME=  \ # mysql数据库名称</span><br><span class="line">-e MYSQL_SERVICE_USER=root \ # mysql用户名</span><br><span class="line">-e MYSQL_SERVICE_PASSWORD= \ #mysql 密码</span><br><span class="line">-v /mydata/logs:<span class="regexp">/home/</span>nacos/logs \</span><br><span class="line">nacos/nacos-server</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 常用命令记录</title>
    <url>/2021/07/22/Linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>这是开发过程中常用的linux命令记录</p>
<span id="more"></span>

<h2 id="使用sed命令截取指定时间范围内的日志"><a href="#使用sed命令截取指定时间范围内的日志" class="headerlink" title="使用sed命令截取指定时间范围内的日志"></a>使用sed命令截取指定时间范围内的日志</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -n &#x27;/2021-02-18 14:53:24/, /2021-02-18 15:24:48/p&#x27; /opt/logs/odc-orderserver-api/odc.log &gt; /opt/logs/odc-orderserver-api/odc2.log</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>deepin-优化笔记</title>
    <url>/2020/05/20/deepin-%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>deepin 安装后问题解决</p>
<span id="more"></span>



<h2 id="添加-打开微信快捷键"><a href="#添加-打开微信快捷键" class="headerlink" title="添加 打开微信快捷键"></a>添加 打开微信快捷键</h2><pre><code>设置中心-&gt;键盘-&gt;快捷键中添加，如下：
昵称：提取微信消息
命令：&quot;/opt/apps/com.qq.weixin.deepin/files/run.sh&quot; -u
快捷键：Ctrl+Alt+w
</code></pre>
<h2 id="解决风扇为题"><a href="#解决风扇为题" class="headerlink" title="解决风扇为题"></a>解决风扇为题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo  deepin-editor  /etc/default/grub</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DEEPIN_GFXMODE_ADJUSTED=1</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;spiash quiet&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;intel_pstate=disable&quot;</span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_DISTRIBUTOR=&quot;`/usr/bin/lsb_release -d -s 2&gt;/dev/null || echo Deepin`&quot;</span><br><span class="line">GRUB_GFXMODE=1920x1080</span><br><span class="line">GRUB_THEME=&quot;/boot/grub/themes/deepin/theme.txt&quot;</span><br><span class="line">GRUB_TIMEOUT=5</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="deepin-20-重启有升级程序阻止问题"><a href="#deepin-20-重启有升级程序阻止问题" class="headerlink" title="deepin 20 重启有升级程序阻止问题"></a>deepin 20 重启有升级程序阻止问题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#修复损坏的安装</span><br><span class="line">sudo apt --fix-broken install</span><br><span class="line">sudo apt remove unattended-upgrades</span><br><span class="line">#移除不再需要的依赖</span><br><span class="line">sudo apt autoremove</span><br><span class="line">#修复损坏的依赖</span><br><span class="line">sudo apt install -f</span><br></pre></td></tr></table></figure>



<h2 id="打开ll命令"><a href="#打开ll命令" class="headerlink" title="打开ll命令"></a>打开ll命令</h2><p>ll命令其实是 ls -l命令的别名,在deepin中这个配置被注释掉了,使用下面的命令编辑配置文件打开即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>将alias ll=’ls -l’前的注释打开,然后source ~/.bashrc刷新一下即可</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>deepin</tag>
      </tags>
  </entry>
  <entry>
    <title>docker命令笔记</title>
    <url>/2020/05/20/docker%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>docker 常用命令</p>
<span id="more"></span>



<h3 id="deepin-启动docker报错"><a href="#deepin-启动docker报错" class="headerlink" title="deepin 启动docker报错"></a>deepin 启动docker报错</h3><p>  使用命令删除 apparmor 可以正常运行</p>
<pre><code>sudo apt remove apparmor
</code></pre>
<h3 id="构建mysql容器"><a href="#构建mysql容器" class="headerlink" title="构建mysql容器"></a>构建mysql容器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name mysql5.7 -p 3306:3306 -v /home/leo/data/mysql/data/:/var/lib/mysql -v /home/leo/data/mysql/conf/:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=liu920926 -d mysql:5.7</span><br><span class="line"></span><br><span class="line">docker run --name mysql_ueat -p 3306:3306 -v /home/leo/data/mysql/ueat/data/:/var/lib/mysql -v /home/leo/data/mysql/ueat/conf/:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=liu920926 -d mysql:5.7</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h3><pre><code>docker build -t apiImg .
</code></pre>
<h3 id="docker-命令"><a href="#docker-命令" class="headerlink" title="docker 命令"></a>docker 命令</h3><pre><code>-d 后台运行
--name 给容器命名
-p 端口映射 宿主机端口:docker端口
-v 挂载数据 宿主机目录:docker内目录
--privileged 最高优先级
Bind mounts
3311
</code></pre>
<h2 id="maven命令笔记"><a href="#maven命令笔记" class="headerlink" title="maven命令笔记"></a>maven命令笔记</h2><ol>
<li><p>打包</p>
<pre><code> mvn clean package -Dmaven.test.skip=true
</code></pre>
</li>
</ol>
<pre><code>    mvn install:install-file -Dfile=/home/leo/Documents/antcloud-prod-api-sdk-2.3.4.jar -DgroupId=cn.yidun -DartifactId=antcloud -Dversion=2.3.4 -Dpackaging=jar
</code></pre>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>deepin sudo免密码</title>
    <url>/2021/08/03/deepin-sudo%E5%85%8D%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<p>作为一款 linxu 桌面系统， deepin 还是挺符合开发需求的，但因为 linxu 系统中权限问题，大部分命令都得加上 sudo 执行，一次两次还好， 但用多了就不胜其烦，下面就来介绍如何修改 sudoers 文件达到使用 sudo 不需要密码的效果。</p>
<span id="more"></span>


<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>如何修改 sudoers？<br> 直接修改/etc/sudoers 么？</p>
</blockquote>
<p>不，最好不要这样，这样会因为格式不正确而导致修改不生效，最好是使用 visudo 来进行编辑下面将开始修改。</p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim visudo //打开文件</span><br><span class="line"></span><br><span class="line">//假设我们的用户名是 leo </span><br><span class="line">//在文件的最后一行添加：</span><br><span class="line">leo  ALL=(ALL) NOPASSWD: ALL</span><br><span class="line"></span><br><span class="line">//保存退出</span><br><span class="line">linux下在编辑状态下退出请按Ctrl+X，会有两种情形：  </span><br><span class="line">如果文件未修改，直接退出；  </span><br><span class="line">如果修改了文件，下面会询问是否需要保存修改。输入Y确认保存，输入N不保存，按Ctrl+C取消返回。如果输入了Y，下一步会提示输入想要保存的文件名。如果不需要修改文件名直接回车就行；若想要保存成别的名字（也就是另存为）则输入新名称然后确定，这个时候也可用Ctrl+C来取消返回。</span><br><span class="line"></span><br><span class="line">//保存后执行:</span><br><span class="line">sudo usermod -aG sudo doghead</span><br><span class="line">	</span><br></pre></td></tr></table></figure>

<h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>电脑只是作为开发使用，其中的安全问题这里就不多说了，想知道的朋友可以查询相关资料，这里只是提供一种简单的方法</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>deepin</tag>
      </tags>
  </entry>
  <entry>
    <title>deepin-安装笔记</title>
    <url>/2020/05/20/deepin-%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p><img src="https://gitee.com/slliu/image/raw/master/img/pc_banner_cn_desk.jpg" alt="pc_banner_cn_desk"></p>
<p>deepin  开发环境搭建</p>
<span id="more"></span>



<h2 id="软件下载-清华大学开源软件镜像站"><a href="#软件下载-清华大学开源软件镜像站" class="headerlink" title="软件下载 清华大学开源软件镜像站"></a>软件下载 <a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学开源软件镜像站</a></h2><h2 id="git-的安装"><a href="#git-的安装" class="headerlink" title="git 的安装"></a>git 的安装</h2><pre><code> sudo apt-get install git   
</code></pre>
<h2 id="Java-jdk环境配置"><a href="#Java-jdk环境配置" class="headerlink" title="Java jdk环境配置"></a>Java jdk环境配置</h2><blockquote>
<p><a href="https://www.oracle.com/technetwork/java/javase/archive-139210.html">下载jdk</a></p>
</blockquote>
<blockquote>
<p>安装解压JDK到指定目录</p>
</blockquote>
<blockquote>
<p>配置环境变量</p>
<blockquote>
<p>打开环境变量文件</p>
</blockquote>
</blockquote>
<pre><code>tar -zxvf jdk-8u202-linux-x64.tar.gz -C /home/leo/apps/java/
ln -s /home/leo/apps/java/jdk1.8.0_231 /usr/local/java
sudo tee -a /etc/profile &lt;&lt;&lt; &quot;JAVA_HOME=/usr/local/java&quot;
sudo tee -a /etc/profile &lt;&lt;&lt; &quot;CLASSPATH=.:$JAVA_HOME/bin.tools.jar&quot;   
sudo tee -a /etc/profile &lt;&lt;&lt; &quot;PATH=$JAVA_HOME/bin:$PATH&quot;
sudo tee -a /etc/profile &lt;&lt;&lt; &quot;export JAVA_HOME CLASSPATH PATH&quot;
echo &quot;执行命令使配置生效&quot;
source /etc/profile
java -version
# 配置环境变量
echo &quot;为方便升级建立maven软连接&quot;
sudo ln -s /home/leo/apps/apache/maven/apache-maven-3.5.4 /usr/local/maven
echo &quot;修改变量&quot;
sudo tee -a /etc/profile &lt;&lt;&lt; &quot;MAVEN_HOME=/usr/local/maven&quot;
sudo tee -a /etc/profile &lt;&lt;&lt; &quot;PATH=$MAVEN_HOME/bin:$PATH&quot;
sudo tee -a /etc/profile &lt;&lt;&lt; &quot;export MAVEN_HOME PATH&quot;
echo &quot;执行命令使配置生效&quot;
source /etc/profile
</code></pre>
<p>​    </p>
<h2 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h2><blockquote>
<p>下载maven包，并解压</p>
</blockquote>
<pre><code> weget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
 tar -zxvf apache-maven-maven-3.5.4-bin.tar.gz  -C /home/leo/apps/apache/maven/
</code></pre>
<h2 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h2><blockquote>
<p> 建立软连接</p>
</blockquote>
<pre><code>sudo ln -s /home/leo/apps/node/bin/node /usr/local/bin/
sudo ln -s /home/leo/apps/node//bin/npm  /usr/local/bin/
npm install -g cnpm --registry=https://registry.npm.taobao.org
sudo ln -s /home/leo/apps/node//bin/cnpm  /usr/local/bin/
</code></pre>
<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 如果以前安装过老版本，要确保先卸载以前版本</span><br><span class="line">sudo apt-get remove docker.io docker-engine</span><br><span class="line"># 安装密钥管理与下载相关的工具</span><br><span class="line">sudo apt-get install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line"># 下载并安装密钥</span><br><span class="line">curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/debian/gpg | sudo apt-key add -</span><br><span class="line"># 查看密钥是否安装成功</span><br><span class="line">sudo apt-key fingerprint 0EBFCD88</span><br><span class="line"># 添加docker软件源</span><br><span class="line">sudo tee /etc/apt/sources.list.d/docker.list &lt;&lt;-&quot;EOF&quot;</span><br><span class="line"># 中国科学技术大学开源软件镜像</span><br><span class="line">deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian buster stable</span><br><span class="line"># 清华大学开源软件镜像站</span><br><span class="line">deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian/ buster stable</span><br><span class="line">EOF</span><br><span class="line"># 更新软件仓库</span><br><span class="line">sudo apt-get update</span><br><span class="line"># 安装docker-ce</span><br><span class="line">sudo apt-get install docker-ce</span><br><span class="line"># </span><br><span class="line">sudo usermod -aG docker $USER</span><br><span class="line"># 更换国内的 docker 加速器以及修改镜像容器存放目录</span><br><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line"> &quot;graph&quot;: &quot;/home/leo/data/docker&quot;,</span><br><span class="line"> &quot;registry-mirrors&quot;: [&quot;https://7fulhipd.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>



<h2 id="sublime"><a href="#sublime" class="headerlink" title="sublime"></a>sublime</h2><pre><code>wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
sudo apt-get install apt-transport-https
echo &quot;deb https://download.sublimetext.com/ apt/stable/&quot; | sudo tee /etc/apt/sources.list.d/sublime-text.list
sudo apt-get update
sudo apt-get install sublime-text
</code></pre>
<h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -qO - https://typora.io/linux/public-key.asc | sudo apt-key add -</span><br><span class="line"># add Typora&#x27;s repository</span><br><span class="line">sudo tee /etc/apt/sources.list.d/typora.list &lt;&lt;-&quot;EOF&quot;</span><br><span class="line"># typora</span><br><span class="line">deb https://typora.io/linux ./</span><br><span class="line">EOF</span><br><span class="line">sudo apt-get update</span><br><span class="line"># install typora</span><br><span class="line">sudo apt-get install typora</span><br></pre></td></tr></table></figure>



<h3 id="toolbox-安装"><a href="#toolbox-安装" class="headerlink" title="toolbox 安装"></a>toolbox 安装</h3><blockquote>
<p>下载toolbox</p>
</blockquote>
<blockquote>
<p>更改toolbox配置文件添加</p>
<blockquote>
<p>开始编辑文件</p>
</blockquote>
</blockquote>
<pre><code> cd /home/leo/.local/share/JetBrains/Toolbox/
 dedit /home/leo/.local/share/JetBrains/Toolbox/.settings.json
</code></pre>
<blockquote>
<blockquote>
<p>在json配置中加入</p>
</blockquote>
</blockquote>
<pre><code>&quot;install_location&quot;: &quot;/home/leo/apps/jetbrains&quot;, 
</code></pre>
<blockquote>
<p>安装软件后在对应软件目录修改</p>
</blockquote>
<pre><code>-Didea.config.path=/home/leo/data/config/jetbrains/datagrip/config
-Didea.system.path=/home/leo/data/config/jetbrains/datagrip/system
-Didea.plugins.path=/home/leo/data/config/jetbrains/datagrip/config/plugins
</code></pre>
<h3 id="postman"><a href="#postman" class="headerlink" title="postman"></a>postman</h3><pre><code># 官网下载Linux软件包: https://www.getpostman.com/apps 
# sudo tar -xzvf Postman-linux-x64-6.4.4.tar.gz
# ./Postman/Postman
# 建立软链接，创建解压后的 Postman 文件中的 Postman 到 /usr/bin/ 目录下
sudo ln -s /home/leo/apps/Postman/Postman /usr/bin/
# 5、创建启动图标，便于快速启动
sudo vim  /usr/share/applications/Postman.desktop &lt;&lt;-EOF
[Desktop Entry]
Name=Postman
GenericName=Postman
Exec=/usr/bin/Postman
Terminal=false
Icon=/home/leo/Postman/app/resources/app/assets/icon.png
Type=Application
Categories=Network;
EOF
</code></pre>
<p>​    </p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>deepin</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Github博客搭建之环境搭建篇</title>
    <url>/2020/05/20/github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>使用 hexo+git 搭建项目</p>
<span id="more"></span>

<h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><ul>
<li> 有githup账号</li>
<li> 安装git环境</li>
<li> 安装node环境</li>
</ul>
<h2 id="在github上创建一个仓库"><a href="#在github上创建一个仓库" class="headerlink" title="在github上创建一个仓库"></a>在github上创建一个仓库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">开始创建库，如下图所示，仓库名创建格式必须为：&lt;用户名&gt;.github.io，Description为描述仓库，自定义写，填写必要的描述，也可不填。勾选Initialize this repository with a README点击Creat repository进行创建。</span><br></pre></td></tr></table></figure>

<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL1lhZmluZS9ZYWZpbmUtaW1ncy9pbWFnZXMvMjAxOTExMTcyMTI1MzgucG5n?x-oss-process=image/format,png" alt="img"></p>
<h2 id="本地安装hexo静态博客框架以及发布到Github-Pages"><a href="#本地安装hexo静态博客框架以及发布到Github-Pages" class="headerlink" title="本地安装hexo静态博客框架以及发布到Github Pages"></a>本地安装hexo静态博客框架以及发布到Github Pages</h2><p>首先选择一个磁盘作为你博客文件的存放位置，然后新建一个文件夹，比如名为blogtest的文件夹，创建完后，先不要点进去，在此处点击鼠标右键，选择<code>Git Bash Here</code>，然后依次输入如下命令，：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># hexo框架的安装</span><br><span class="line">cnpm install -g hexo-cli</span><br><span class="line"># 等上一个命令完成后，在输入下面的命令</span><br><span class="line">hexo init &lt;新建文件夹的名称&gt;  #初始化文件夹</span><br><span class="line">cd &lt;新建文件夹的名称&gt;</span><br><span class="line">cnpm install  # 安装博客所需要的依赖文件</span><br></pre></td></tr></table></figure>



<p>等待运行完成，此时文件夹中多了许多文件。<br><strong>注意</strong>：<strong>后续的命令均需要在站点目录下（即文件夹内）使用Git Bash运行。</strong><br>此时Hexo框架的本地搭建已经完成了。我们来运行一下看看，命令行依次输入以下命令 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>浏览器中打开<a href="http://localhost:4000或者127.0.0.1:4000，可以看到一个网页，说明Hexo博客已经成功在本地运行。">http://localhost:4000或者127.0.0.1:4000，可以看到一个网页，说明Hexo博客已经成功在本地运行。</a></p>
<h1 id="本地博客发布到Github-Pages"><a href="#本地博客发布到Github-Pages" class="headerlink" title="本地博客发布到Github Pages."></a>本地博客发布到Github Pages.</h1><p>之前的步骤中，我们已经完成了对Github账户的注册以及Github Pages的创建，接下来是将本地博客发布至Github Pages。</p>
<ol>
<li>首先需要安装发布的插件，在站点目录下执行下面的命令，也就是创建的博客目录下：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>紧接着，将本地目录与GitHub关联起来，输入下面的命令行：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>git 命令笔记</title>
    <url>/2020/05/20/git%20%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>git 命令笔记</p>
<span id="more"></span>



<h2 id="添加全局git-ignore"><a href="#添加全局git-ignore" class="headerlink" title="添加全局git .ignore"></a>添加全局git .ignore</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global core.excludesfile ~/data/config/git/.gitignore</span><br></pre></td></tr></table></figure>

<h2 id="linux-记住密码"><a href="#linux-记住密码" class="headerlink" title="linux 记住密码"></a>linux 记住密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure>

<h2 id="git-生成ssh"><a href="#git-生成ssh" class="headerlink" title="git 生成ssh"></a>git 生成ssh</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C leo.sl.liu1992@gmail.com</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>设置</title>
    <url>/2021/07/21/%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
